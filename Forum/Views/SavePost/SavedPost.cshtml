@model IEnumerable<Forum.Models.SavePost>


@using System.Security.Claims;
@{
    var userId = User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.NameIdentifier).Value;
}


@{
    ViewData["Title"] = "Index";
}


<h1 class="text-center bg-black text-light">All Saved Posts</h1>

<hr class="border border-5 border-dark mb-4 mt-4" />


@foreach (var item in Model)
{
    <div class="container">
        <div class="container d-sm-inline-flex row">
            <div class="col-sm-2 text-center">
                <a href="~/Post/ProfileSomeOne?userId=@item.Post.UserId">
                    @if (item.Post.User.Picture != null)
                    {
                        <img src="~/images/@item.Post.User.Picture" class="rounded-circle img-thumbnail" width="55px;" />
                    }
                    else
                    {
                        <img src="~/images/No User Image/User_Image.jpg" class="rounded-circle img-thumbnail" width="55px;" />
                    }
                </a>
            </div>

            <div style="text-align:left; " class="col-sm-8">
                @item.Post.User.UserName<br>
                @item.Post.PublishDate.ToString("dd-MM-yyyy  hh:mm tt")

            </div>




            <!-- List of options for post-->
            <!-- The Modal -->
            <div class="col-sm-2">

                <div class="container mt-1">
                    <button type="button" class="btn btn-outline-primary border-0" data-bs-toggle="modal" data-bs-target="#modal_@item.Post.Id">
                        <strong>...</strong>
                    </button>
                </div>



                <div class="modal fade" id="modal_@item.Post.Id">
                    <div class="modal-dialog">
                        <div class="modal-content">

                            <!-- Modal Header -->
                            <div class="modal-header">
                                <h4 class="modal-title">Options</h4>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>

                            <!-- Modal body -->
                            <div class="modal-body">
                                <ul class="list-unstyled text-center ">
                                    @if (item.Post.UserId == userId)
                                    {
                                        <li><a asp-action="Edit" asp-controller="Post" asp-route-id="@item.Post.Id">Edit</a></li>
                                        <li><a asp-action="Delete" asp-controller="Post" asp-route-id="@item.Post.Id">Delete</a></li>
                                        <li><button data-postid="@item.Post.Id" class="unsave-post-button">Un Save Post</button></li>
                                        <li><a asp-action="#" asp-route-id="@item.Post.Id">Copy URL</a></li>
                                    }
                                    else
                                    {

                                        <li><button data-postid="@item.Post.Id" class="unsave-post-button">Un Save Post</button></li>
                                        <li><a asp-action="AddReport" asp-controller="PostReport" asp-route-postId="@item.Post.Id">Report</a></li>
                                        <li><a asp-action="#" asp-route-id="@item.Post.Id">Hide Post</a></li>
                                        <li><a asp-action="#" asp-route-id="@item.Post.Id">Copy url</a></li>
                                        //<li><a asp-action="#" asp-route-id="@item.Id">Turn on Notifications</a></li>
                                    }
                                </ul>
                            </div>

                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>


            </div>



        </div>




        <hr />





        <!-- Post Content-->
        @if (item.Post.Content != null)
        {
            <div class="bg-secondary bg-opacity-25 p-3 m-1 row">
                <div class="col-md-12 post-container">
                    @item.Post.Content
                </div>
            </div>
        }







        <!-- Show Image or video -->
        @if (item.Post.Image != null)
        {
            string filePath = item.Post.Image;

            string fileExtension = System.IO.Path.GetExtension(filePath).ToLower();

            bool isImage = false;
            bool isVideo = false;

            if (fileExtension == ".jpg" || fileExtension == ".png" || fileExtension == ".gif")
            {
                isImage = true;
            }
            else if (fileExtension == ".mp4" || fileExtension == ".avi" || fileExtension == ".mov")
            {
                isVideo = true;
            }

            @if (isImage)
            {
                <div class="row p-3">
                    <img src="~/Post-Images/@Html.DisplayFor(modelItem => item.Post.Image)" class=" img-thumbnail" />
                </div>
            }
            else if (isVideo)
            {
                <div class="row p-3">
                    <video src="~/Post-Images/@Html.DisplayFor(modelItem => item.Post.Image)" class=" img-thumbnail" style="max-height:400px;" controls></video>
                </div>
            }
        }






        @* Comment and see all comments *@
        <div>
            <form asp-action="AddComment" asp-controller="Comment" method="post" asp-route-postId="@item.Post.Id">
                <div class="container">
                    <div class="row">
                        <input type="text" name="commentText" class="col-12 form-control" placeholder="Write a comment" />
                    </div>
                </div>
            </form>
        </div>







        @* Buttons under posts *@
        <div class="container">
            <a asp-action="PostLikeUsers" asp-controller="Like" asp-route-id="@item.Post.Id" style="text-decoration:none; color:indigo;">@item.Post.LikeCount Likes </a> - <a asp-action="ShowComments" asp-controller="Post" asp-route-postId="@item.Post.Id" style="text-decoration:none;"> @item.Post.CommentCount Comments</a>
            <div class="row">
                <div class="col-sm-2 row">
                    @if (User.Identity.IsAuthenticated)
                    {
                        var userLikedCom = item.Post.Likes != null && item.Post.Likes.Any(l => l.UserId == userId);
                        //var userLiked = item.Likes.Any(a => a.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier));
                        if (!userLikedCom)
                        {
                            <button type="button" class="like-button col-sm-12" data-postid="@item.Post.Id">Like</button>
                        }
                        else
                        {
                            <button type="button" class="unlike-button col-sm-12" data-postid="@item.Post.Id">Unlike</button>
                        }
                    }
                </div>

                <a asp-action="Index" class="btn btn-outline-primary col-sm-2">Share</a>
                <div class="col-sm-2"></div>

            </div>
        </div>


        <hr class="border border-3 border-dark mb-3" />
    </div>


}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {

            // Like button
            $(".like-button, .unlike-button").click(function () {
                var postId = $(this).data("postid");
                var actionUrl = $(this).hasClass("like-button") ? "/Like/LikePost" : "/Like/UnlikePost";
                var button = $(this);

                $.ajax({
                    type: "POST",
                    url: actionUrl + "?postId=" + postId,
                    success: function (data) {
                        if (data.success) {
                            // Toggle the button's class to indicate the like status
                            button.toggleClass("like-button unlike-button");

                            if (button.hasClass("like-button")) {
                                button.text("Like");
                            } else {
                                button.text("Unlike");
                            }

                        } else {
                            console.error("Something went wrong.");
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error("Error:", errorThrown);
                    }
                });
            });



            // Save Post Button
            $(".unsave-post-button").click(function () {
                var postId = $(this).data("postid");
                //var actionUrl = $(this).hasClass("save-post-button") ? "/SavePost/SavePost" : "/SavePost/CancelSave";
                var button = $(this);

                $.ajax({
                    type: "POST",
                   // url: actionUrl + "?postId=" + postId,
                    url:"/SavePost/CancelSave?postId=" + postId,
                    success: function (data) {
                        if (data.success) {
                            // Toggle the button's class to indicate the like status
                            //button.toggleClass("save-post-button unsave-post-button");
                            alert("Operation was successful!");

                        } else {
                            alert("Operation failed.");
                            console.error("Something went wrong.");
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error("Error:", errorThrown);
                    }
                });
            });




        });
    </script>

    }

